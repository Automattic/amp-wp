# Tell Travis CI we're using PHP
language: php

# PHP version used in first build configuration.
php:
    - "5.6"

mysql:
  database: wordpress_test
  username: root
  encoding: utf8

# WordPress version used in first build configuration.
env:
    - WP_VERSION=latest

sudo: required

# Next we define our matrix of additional build configurations to test against.
# The versions listed above will automatically create our first configuration,
# so it doesn't need to be re-defined below.

# WP_VERSION specifies the tag to use. The way these tests are configured to run
# requires at least WordPress 3.8. Specify "latest" to test against SVN trunk.

# Note that Travis CI supports listing these above to automatically build a
# matrix of configurations, but we're being nice here by manually building a
# total of four configurations even though we're testing 4 versions of PHP
# along with 2 versions of WordPress (which would build 8 configs otherwise).
# This takes half as long to run while still providing adequate coverage.

#
#matrix:
#  include:
#   - php: "nightly"
#     env: WP_VERSION=latest
#   - php: "nightly"
#     env: WP_VERSION=4.4
#   - php: "5.2"
#     env: WP_VERSION=latest
#   - php: "5.2"
#     env: WP_VERSION=4.4
#     # 5.6 / latest already included above as first build.
#   - php: "5.6"
#     env: WP_VERSION=4.4

cache:
  directories:
    - node_modules

addons:
  hosts:
    - auto-amp.dev

before_install:
  - nvm install v4.2.1
  - nvm use v4.2.1

install:
  - npm install

before_script:
  - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
  - sudo apt-get update
  - sudo apt-get install apache2 libapache2-mod-fastcgi
  # enable php-fpm
  - sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
  - sudo a2enmod rewrite actions fastcgi alias
  - echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
  # configure apache virtual hosts
  - sudo cp -f build/travis-ci-apache /etc/apache2/sites-available/default
  - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/default
  - sudo service apache2 restart

script:
  - phpunit
  - bash bin/install-amp-validator-test-data.sh
  - node bin/travis-amp-validator.js