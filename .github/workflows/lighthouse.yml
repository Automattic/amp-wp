name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source files
        uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Define Composer cache hash structure
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        # Scripts are not ignored as they are needed to apply patches for the
        # `sabberworm/php-css-parser` dependency.
        run: composer install --prefer-dist --optimize-autoloader

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Define npm cache hash structure
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node dependencies
        # Prevent malicious scripts from being run with `--ignore-scripts`
        run: npm install --ignore-scripts

      - name: Run build script
        run: npm run build

      - name: Start Docker environment
        run: npm run env:start

      - name: Populate site with reference content
        run: npm run env:populate-site

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse CI health check
        run: lhci healthcheck

      - name: Run Lighthouse CI audit
        run: lhci collect

      - name: Assert Lighthouse CI measurements against requirements
        run: lhci assert

      - name: Upload Lighthouse CI measurements
        run: lhci collect

      - name: Stop Docker environment
        run: npm run env:stop
